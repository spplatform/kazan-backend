// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Kazan hackathon API",
    "title": "Kazan API",
    "version": "0.1.0"
  },
  "host": "localhost:8080",
  "basePath": "/api/",
  "paths": {
    "/test": {
      "get": {
        "description": "test get endpoint for test purposes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "test"
        ],
        "summary": "test get endpoint",
        "parameters": [
          {
            "description": "The GitHub API url to call",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetTestRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GetTestReqsponse"
            }
          },
          "404": {
            "description": "not found"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    }
  },
  "definitions": {
    "GetTestReqsponse": {
      "type": "object",
      "required": [
        "account-from",
        "account-to",
        "amount"
      ],
      "properties": {
        "account-from": {
          "type": "string"
        },
        "account-to": {
          "type": "string"
        },
        "amount": {
          "type": "number"
        }
      }
    },
    "GetTestRequest": {
      "type": "object",
      "required": [
        "id",
        "balance",
        "currency"
      ],
      "properties": {
        "balance": {
          "type": "number"
        },
        "currency": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    }
  },
  "tags": [
    {
      "description": "Test tag",
      "name": "test"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Kazan hackathon API",
    "title": "Kazan API",
    "version": "0.1.0"
  },
  "host": "localhost:8080",
  "basePath": "/api/",
  "paths": {
    "/test": {
      "get": {
        "description": "test get endpoint for test purposes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "test"
        ],
        "summary": "test get endpoint",
        "parameters": [
          {
            "description": "The GitHub API url to call",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetTestRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GetTestReqsponse"
            }
          },
          "404": {
            "description": "not found"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    }
  },
  "definitions": {
    "GetTestReqsponse": {
      "type": "object",
      "required": [
        "account-from",
        "account-to",
        "amount"
      ],
      "properties": {
        "account-from": {
          "type": "string"
        },
        "account-to": {
          "type": "string"
        },
        "amount": {
          "type": "number"
        }
      }
    },
    "GetTestRequest": {
      "type": "object",
      "required": [
        "id",
        "balance",
        "currency"
      ],
      "properties": {
        "balance": {
          "type": "number"
        },
        "currency": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    }
  },
  "tags": [
    {
      "description": "Test tag",
      "name": "test"
    }
  ]
}`))
}
