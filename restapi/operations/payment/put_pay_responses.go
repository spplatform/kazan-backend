// Code generated by go-swagger; DO NOT EDIT.

package payment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/spplatform/kazan-backend/models"
)

// PutPayOKCode is the HTTP code returned for type PutPayOK
const PutPayOKCode int = 200

/*PutPayOK OK

swagger:response putPayOK
*/
type PutPayOK struct {

	/*
	  In: Body
	*/
	Payload *models.PaymentResponse `json:"body,omitempty"`
}

// NewPutPayOK creates PutPayOK with default headers values
func NewPutPayOK() *PutPayOK {

	return &PutPayOK{}
}

// WithPayload adds the payload to the put pay o k response
func (o *PutPayOK) WithPayload(payload *models.PaymentResponse) *PutPayOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put pay o k response
func (o *PutPayOK) SetPayload(payload *models.PaymentResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutPayOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutPayBadRequestCode is the HTTP code returned for type PutPayBadRequest
const PutPayBadRequestCode int = 400

/*PutPayBadRequest Bad request

swagger:response putPayBadRequest
*/
type PutPayBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.StatusResponse `json:"body,omitempty"`
}

// NewPutPayBadRequest creates PutPayBadRequest with default headers values
func NewPutPayBadRequest() *PutPayBadRequest {

	return &PutPayBadRequest{}
}

// WithPayload adds the payload to the put pay bad request response
func (o *PutPayBadRequest) WithPayload(payload *models.StatusResponse) *PutPayBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put pay bad request response
func (o *PutPayBadRequest) SetPayload(payload *models.StatusResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutPayBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutPayNotFoundCode is the HTTP code returned for type PutPayNotFound
const PutPayNotFoundCode int = 404

/*PutPayNotFound Not found

swagger:response putPayNotFound
*/
type PutPayNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.StatusResponse `json:"body,omitempty"`
}

// NewPutPayNotFound creates PutPayNotFound with default headers values
func NewPutPayNotFound() *PutPayNotFound {

	return &PutPayNotFound{}
}

// WithPayload adds the payload to the put pay not found response
func (o *PutPayNotFound) WithPayload(payload *models.StatusResponse) *PutPayNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put pay not found response
func (o *PutPayNotFound) SetPayload(payload *models.StatusResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutPayNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutPayInternalServerErrorCode is the HTTP code returned for type PutPayInternalServerError
const PutPayInternalServerErrorCode int = 500

/*PutPayInternalServerError Internal server error

swagger:response putPayInternalServerError
*/
type PutPayInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.StatusResponse `json:"body,omitempty"`
}

// NewPutPayInternalServerError creates PutPayInternalServerError with default headers values
func NewPutPayInternalServerError() *PutPayInternalServerError {

	return &PutPayInternalServerError{}
}

// WithPayload adds the payload to the put pay internal server error response
func (o *PutPayInternalServerError) WithPayload(payload *models.StatusResponse) *PutPayInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put pay internal server error response
func (o *PutPayInternalServerError) SetPayload(payload *models.StatusResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutPayInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
