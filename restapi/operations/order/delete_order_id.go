// Code generated by go-swagger; DO NOT EDIT.

package order

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// DeleteOrderIDHandlerFunc turns a function with the right signature into a delete order ID handler
type DeleteOrderIDHandlerFunc func(DeleteOrderIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteOrderIDHandlerFunc) Handle(params DeleteOrderIDParams) middleware.Responder {
	return fn(params)
}

// DeleteOrderIDHandler interface for that can handle valid delete order ID params
type DeleteOrderIDHandler interface {
	Handle(DeleteOrderIDParams) middleware.Responder
}

// NewDeleteOrderID creates a new http.Handler for the delete order ID operation
func NewDeleteOrderID(ctx *middleware.Context, handler DeleteOrderIDHandler) *DeleteOrderID {
	return &DeleteOrderID{Context: ctx, Handler: handler}
}

/*DeleteOrderID swagger:route DELETE /order/{id} order deleteOrderId

cancel order

*/
type DeleteOrderID struct {
	Context *middleware.Context
	Handler DeleteOrderIDHandler
}

func (o *DeleteOrderID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDeleteOrderIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
