// Code generated by go-swagger; DO NOT EDIT.

package route

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/spplatform/kazan-backend/models"
)

// GetRouteTrainIDOKCode is the HTTP code returned for type GetRouteTrainIDOK
const GetRouteTrainIDOKCode int = 200

/*GetRouteTrainIDOK OK

swagger:response getRouteTrainIdOK
*/
type GetRouteTrainIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.RouteResponse `json:"body,omitempty"`
}

// NewGetRouteTrainIDOK creates GetRouteTrainIDOK with default headers values
func NewGetRouteTrainIDOK() *GetRouteTrainIDOK {

	return &GetRouteTrainIDOK{}
}

// WithPayload adds the payload to the get route train Id o k response
func (o *GetRouteTrainIDOK) WithPayload(payload *models.RouteResponse) *GetRouteTrainIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get route train Id o k response
func (o *GetRouteTrainIDOK) SetPayload(payload *models.RouteResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRouteTrainIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetRouteTrainIDBadRequestCode is the HTTP code returned for type GetRouteTrainIDBadRequest
const GetRouteTrainIDBadRequestCode int = 400

/*GetRouteTrainIDBadRequest Bad request

swagger:response getRouteTrainIdBadRequest
*/
type GetRouteTrainIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.StatusResponse `json:"body,omitempty"`
}

// NewGetRouteTrainIDBadRequest creates GetRouteTrainIDBadRequest with default headers values
func NewGetRouteTrainIDBadRequest() *GetRouteTrainIDBadRequest {

	return &GetRouteTrainIDBadRequest{}
}

// WithPayload adds the payload to the get route train Id bad request response
func (o *GetRouteTrainIDBadRequest) WithPayload(payload *models.StatusResponse) *GetRouteTrainIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get route train Id bad request response
func (o *GetRouteTrainIDBadRequest) SetPayload(payload *models.StatusResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRouteTrainIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetRouteTrainIDNotFoundCode is the HTTP code returned for type GetRouteTrainIDNotFound
const GetRouteTrainIDNotFoundCode int = 404

/*GetRouteTrainIDNotFound Not found

swagger:response getRouteTrainIdNotFound
*/
type GetRouteTrainIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.StatusResponse `json:"body,omitempty"`
}

// NewGetRouteTrainIDNotFound creates GetRouteTrainIDNotFound with default headers values
func NewGetRouteTrainIDNotFound() *GetRouteTrainIDNotFound {

	return &GetRouteTrainIDNotFound{}
}

// WithPayload adds the payload to the get route train Id not found response
func (o *GetRouteTrainIDNotFound) WithPayload(payload *models.StatusResponse) *GetRouteTrainIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get route train Id not found response
func (o *GetRouteTrainIDNotFound) SetPayload(payload *models.StatusResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRouteTrainIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetRouteTrainIDInternalServerErrorCode is the HTTP code returned for type GetRouteTrainIDInternalServerError
const GetRouteTrainIDInternalServerErrorCode int = 500

/*GetRouteTrainIDInternalServerError Internal server error

swagger:response getRouteTrainIdInternalServerError
*/
type GetRouteTrainIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.StatusResponse `json:"body,omitempty"`
}

// NewGetRouteTrainIDInternalServerError creates GetRouteTrainIDInternalServerError with default headers values
func NewGetRouteTrainIDInternalServerError() *GetRouteTrainIDInternalServerError {

	return &GetRouteTrainIDInternalServerError{}
}

// WithPayload adds the payload to the get route train Id internal server error response
func (o *GetRouteTrainIDInternalServerError) WithPayload(payload *models.StatusResponse) *GetRouteTrainIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get route train Id internal server error response
func (o *GetRouteTrainIDInternalServerError) SetPayload(payload *models.StatusResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRouteTrainIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
