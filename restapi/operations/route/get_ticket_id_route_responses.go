// Code generated by go-swagger; DO NOT EDIT.

package route

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/spplatform/kazan-backend/models"
)

// GetTicketIDRouteOKCode is the HTTP code returned for type GetTicketIDRouteOK
const GetTicketIDRouteOKCode int = 200

/*GetTicketIDRouteOK OK

swagger:response getTicketIdRouteOK
*/
type GetTicketIDRouteOK struct {

	/*
	  In: Body
	*/
	Payload *models.RouteResponse `json:"body,omitempty"`
}

// NewGetTicketIDRouteOK creates GetTicketIDRouteOK with default headers values
func NewGetTicketIDRouteOK() *GetTicketIDRouteOK {

	return &GetTicketIDRouteOK{}
}

// WithPayload adds the payload to the get ticket Id route o k response
func (o *GetTicketIDRouteOK) WithPayload(payload *models.RouteResponse) *GetTicketIDRouteOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get ticket Id route o k response
func (o *GetTicketIDRouteOK) SetPayload(payload *models.RouteResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTicketIDRouteOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTicketIDRouteBadRequestCode is the HTTP code returned for type GetTicketIDRouteBadRequest
const GetTicketIDRouteBadRequestCode int = 400

/*GetTicketIDRouteBadRequest Bad request

swagger:response getTicketIdRouteBadRequest
*/
type GetTicketIDRouteBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.StatusResponse `json:"body,omitempty"`
}

// NewGetTicketIDRouteBadRequest creates GetTicketIDRouteBadRequest with default headers values
func NewGetTicketIDRouteBadRequest() *GetTicketIDRouteBadRequest {

	return &GetTicketIDRouteBadRequest{}
}

// WithPayload adds the payload to the get ticket Id route bad request response
func (o *GetTicketIDRouteBadRequest) WithPayload(payload *models.StatusResponse) *GetTicketIDRouteBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get ticket Id route bad request response
func (o *GetTicketIDRouteBadRequest) SetPayload(payload *models.StatusResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTicketIDRouteBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTicketIDRouteNotFoundCode is the HTTP code returned for type GetTicketIDRouteNotFound
const GetTicketIDRouteNotFoundCode int = 404

/*GetTicketIDRouteNotFound Not found

swagger:response getTicketIdRouteNotFound
*/
type GetTicketIDRouteNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.StatusResponse `json:"body,omitempty"`
}

// NewGetTicketIDRouteNotFound creates GetTicketIDRouteNotFound with default headers values
func NewGetTicketIDRouteNotFound() *GetTicketIDRouteNotFound {

	return &GetTicketIDRouteNotFound{}
}

// WithPayload adds the payload to the get ticket Id route not found response
func (o *GetTicketIDRouteNotFound) WithPayload(payload *models.StatusResponse) *GetTicketIDRouteNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get ticket Id route not found response
func (o *GetTicketIDRouteNotFound) SetPayload(payload *models.StatusResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTicketIDRouteNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTicketIDRouteInternalServerErrorCode is the HTTP code returned for type GetTicketIDRouteInternalServerError
const GetTicketIDRouteInternalServerErrorCode int = 500

/*GetTicketIDRouteInternalServerError Internal server error

swagger:response getTicketIdRouteInternalServerError
*/
type GetTicketIDRouteInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.StatusResponse `json:"body,omitempty"`
}

// NewGetTicketIDRouteInternalServerError creates GetTicketIDRouteInternalServerError with default headers values
func NewGetTicketIDRouteInternalServerError() *GetTicketIDRouteInternalServerError {

	return &GetTicketIDRouteInternalServerError{}
}

// WithPayload adds the payload to the get ticket Id route internal server error response
func (o *GetTicketIDRouteInternalServerError) WithPayload(payload *models.StatusResponse) *GetTicketIDRouteInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get ticket Id route internal server error response
func (o *GetTicketIDRouteInternalServerError) SetPayload(payload *models.StatusResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTicketIDRouteInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
