// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetTestReqsponse get test reqsponse
// swagger:model GetTestReqsponse
type GetTestReqsponse struct {

	// account from
	// Required: true
	AccountFrom *string `json:"account-from"`

	// account to
	// Required: true
	AccountTo *string `json:"account-to"`

	// amount
	// Required: true
	Amount *float64 `json:"amount"`
}

// Validate validates this get test reqsponse
func (m *GetTestReqsponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAccountFrom(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAccountTo(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAmount(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetTestReqsponse) validateAccountFrom(formats strfmt.Registry) error {

	if err := validate.Required("account-from", "body", m.AccountFrom); err != nil {
		return err
	}

	return nil
}

func (m *GetTestReqsponse) validateAccountTo(formats strfmt.Registry) error {

	if err := validate.Required("account-to", "body", m.AccountTo); err != nil {
		return err
	}

	return nil
}

func (m *GetTestReqsponse) validateAmount(formats strfmt.Registry) error {

	if err := validate.Required("amount", "body", m.Amount); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GetTestReqsponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetTestReqsponse) UnmarshalBinary(b []byte) error {
	var res GetTestReqsponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
